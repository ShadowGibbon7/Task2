import java.util.*;
import javax.xml.parsers.*;
import org.json.*;
import org.xml.sax.*;
import org.xml.sax.helpers.*;

public class XMLReader extends DefaultHandler {
    private final Set<String> fieldsToPrint;
    private boolean inRecord;
    private boolean inField;
    private String currentField;
    private JSONObject currentObject;
    private JSONArray recordsArray;

    public XMLReader(Set<String> fieldsToPrint) {
        this.fieldsToPrint = fieldsToPrint;
        this.recordsArray = new JSONArray();
    }

    public void startElement(String uri, String localName, String qName, Attributes attributes) throws SAXException {
        if (qName.equalsIgnoreCase("Record")) {
            inRecord = true;
            currentObject = new JSONObject();
        } else if (inRecord && fieldsToPrint.contains(qName)) {
            inField = true;
            currentField = qName;
        }
    }

    public void endElement(String uri, String localName, String qName) throws SAXException {
        if (qName.equalsIgnoreCase("Record")) {
            inRecord = false;
            recordsArray.put(currentObject);
        } else if (inRecord && fieldsToPrint.contains(qName)) {
            inField = false;
        }
    }

    public void characters(char ch[], int start, int length) throws SAXException {
        if (inField) {
            currentObject.put(currentField, new String(ch, start, length));
        }
    }

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        Set<String> fieldsToPrint = new HashSet<>();

        // Prompt the user to select which fields they want to print
        System.out.println("Which fields do you want to print? (enter one field per line, or leave empty to print all fields)");
        String field = scanner.nextLine();
        while (!field.isEmpty()) {
            fieldsToPrint.add(field.trim());
            field = scanner.nextLine();
        }

        try {
            XMLReader xmlReader = new XMLReader(fieldsToPrint);
            SAXParserFactory factory = SAXParserFactory.newInstance();
            SAXParser saxParser = factory.newSAXParser();
            saxParser.parse("data.xml", xmlReader);

            System.out.println(xmlReader.recordsArray.toString());
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}
